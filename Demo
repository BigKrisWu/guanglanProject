        String res ="{\n" + "  \"start\": 0,\n" + "  \"limit\": 100,\n" + "  \"total\": 2,\n" + "  \"results\": [\n"
            + "    {\n" + "      \"id\": \"640c0ff0-13f2-11ef-9f12-0255ac1200a0\",\n"
            + "      \"keycode\": \"640c5e11-13f2-11ef-9f12-0255ac1200a0\",\n"
            + "      \"rule_id\": \"640c5e11-13f2-11ef-9f12-0255ac1200a0\",\n" + "      \"active\": true,\n"
            + "      \"base_filter\": \"[{\\\"group_name\\\":\\\"A\\\",\\\"filter_field\\\":\\\"EQUIPLEVEL\\\",\\\"operator\\\":\\\"=\\\",\\\"filter_value\\\":\\\"5\\\",\\\"rule_id\\\":\\\"640c5e11-13f2-11ef-9f12-0255ac1200a0\\\",\\\"filter_flag\\\":\\\"base\\\"}]\",\n"
            + "      \"change_time\": 1716189374948,\n" + "      \"combined_filter\": \"[]\",\n"
            + "      \"combined_table\": \" \",\n" + "      \"num\": \"1\",\n"
            + "      \"primary_table\": \"D_RNT_IRM_IV_OTN_D\",\n" + "      \"relation_filter\": \"[]\",\n"
            + "      \"rule_name\": \"guanglan_rule_1\"\n" + "    },\n" + "    {\n"
            + "      \"id\": \"a5625ee3-13f4-11ef-9f12-0255ac1200a0\",\n"
            + "      \"keycode\": \"a562ad04-13f4-11ef-9f12-0255ac1200a0\",\n"
            + "      \"rule_id\": \"a562ad04-13f4-11ef-9f12-0255ac1200a0\",\n" + "      \"active\": true,\n"
            + "      \"base_filter\": \"[]\",\n" + "      \"change_time\": 1715916201526,\n"
            + "      \"combined_filter\": \"[{\\\"group_name\\\":\\\"A\\\",\\\"filter_field\\\":\\\"CIRCUITLEVEL\\\",\\\"operator\\\":\\\"=\\\",\\\"filter_value\\\":\\\"6\\\",\\\"rule_id\\\":\\\"a562ad04-13f4-11ef-9f12-0255ac1200a0\\\",\\\"filter_flag\\\":\\\"combined\\\"}]\",\n"
            + "      \"combined_table\": \"D_RNT_IRM_IV_OPTICALCIRCUIT_D\",\n" + "      \"num\": \"2\",\n"
            + "      \"primary_table\": \"D_RNT_IRM_IV_OTN_D\",\n"
            + "      \"relation_filter\": \"[{\\\"group_name\\\":\\\"B\\\",\\\"base_field\\\":\\\"ID\\\",\\\"operator\\\":\\\"contains\\\",\\\"combined_filed\\\":\\\"AENDDEVICE_ID\\\",\\\"rule_id\\\":\\\"a562ad04-13f4-11ef-9f12-0255ac1200a0\\\",\\\"filter_flag\\\":\\\"relation\\\"},{\\\"group_name\\\":\\\"B\\\",\\\"base_field\\\":\\\"ID\\\",\\\"operator\\\":\\\"contains\\\",\\\"combined_filed\\\":\\\"ZENDDEVICE_ID\\\",\\\"rule_id\\\":\\\"a562ad04-13f4-11ef-9f12-0255ac1200a0\\\",\\\"filter_flag\\\":\\\"relation\\\"}]\",\n"
            + "      \"rule_name\": \"guanglan_rule_2\"\n" + "    }\n" + "  ]\n" + "}";
        JSONObject object = new JSONObject(res);
        JSONArray results = object.optJSONArray("results");
        List<RuleModel> ruleModels = JsonDataParser.parseJson(results);



在纠正一下，准确理解我的需求：
可以在applyRuleFilters方法中,if(combinedFile != null)这个条件判断中获取到关联表的过滤条件和关联条件，并判断这些条件的group_name
是否属于同组，如果是同组则它们的关系是"且"的关系，否则是"或"的关系
举例：
关联表中的group_name是"A" ，关联表过滤条件为 CIRCUITLEVEL="6" ;
关联条件中有两个条件,第一个关联条件ID contains AENDDEVICE_ID ，第二个关联条件ID contains ZENDDEVICE_ID，group_name都是"B"，
组合在一起为: (ID contains AENDDEVICE_ID && ID contains ZENDDEVICE_ID ) || CIRCUITLEVEL="6" 
数据满足任意条件就可以写到结果表中。


我需要你对handleFileSync方法进行优化，此方法执行上传和下载是串行执行的，我需要多线程并行执行，把修改的代码展示出即可。
需要注意：
1、同一个文件在下载完成才可以执行上传操作。
2、多个下载和上传sftp客户端都是独立的。

在不改变formatSql功能的前提下，将StringBuffer换成StringBuilder，同时result被引用的地方都需要修改，因为参数类型改变了可能会不适用。
```
    public static String formatSql(String sql) {
        List<String> keywords = Arrays.asList("return", "match", "distinct", "desc", "order by", "skip", "limit");
        String keywordPattern = keywords.stream()
                .map(keyword -> "\\b" + java.util.regex.Pattern.quote(keyword.toLowerCase(Locale.ENGLISH)) + "\\b") // 添加单词边界，并转义关键字中的特殊字符
                .collect(Collectors.joining("|"));
        java.util.regex.Pattern pattern = java.util.regex.Pattern.compile("(?i)" + keywordPattern);
        Matcher matcher = pattern.matcher(sql);
        StringBuffer result = new StringBuffer();
        while (matcher.find()) {
            matcher.appendReplacement(result, matcher.group().toUpperCase(Locale.ENGLISH));
        }
        matcher.appendTail(result);


        return result.toString().replace('"', '\'');
    }
```
