
@RestController
@RestSchema(schemaId = "fileProcess")
@RequestMapping(ServiceConstants.SERVICE_URL_PREFIX + "/nebulatool")
@Api(tags = ServiceConstants.SERVICE_PUBLIC_API_TAG)
public class FilePreprocessingController {
    private static final Logger LOGGER = LoggerFactory.getLogger(FilePreprocessingController.class);
    @Autowired
    private FileDownloadService fileDownloadService;
    @Autowired
    private AppProperties appProperties;

    @Autowired
    private FileSynchronizationService fileSynchronizationService;
    @Autowired
    private DataProcessingService dataProcessingService;
    private static final ReentrantLock REENTRANT_LOCK = new ReentrantLock();

    @GetMapping("/downloadAndProcess")
    public String processData() {
        boolean isLocked = false;
        try {
            if (REENTRANT_LOCK.isLocked()) {
                return "task is running";
            }
            REENTRANT_LOCK.lock();
            isLocked = true;
            FileSynchronizationServiceImpl.fetchConfigFromPage();
            appProperties.fetchPathFromPage();
            fileSynchronizationService.synchronizeFiles();
            dataProcessingService.processData();
            return "All data processed successfully!";
        } catch (Exception e) {
            e.printStackTrace();
            return "Data processing failed: " + e.getMessage();
        } finally {
            if(isLocked){
                REENTRANT_LOCK.unlock();
            }
        }
    }
}
